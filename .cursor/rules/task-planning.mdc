---
description: 
globs: 
alwaysApply: true
---
# Task Planning and Organization Standards

## Description

This rule ensures effective task planning and progress tracking using the `tasks/ai/scratchpad.md` file as a scratchpad. The scratchpad serves as a central place for AI task organization, planning, and reflection. It also defines the structure and content requirements for human-in-the-loop tasks.

## Rule

When managing AI tasks:

1. All new AI tasks MUST start with a review and update of the `tasks/ai/scratchpad.md` file
2. The scratchpad MUST be cleared of old task content before starting a new task
3. Each task MUST include:
   - Task description and requirements
   - Step-by-step plan with todo markers
   - Progress updates as steps are completed
   - Reflection points at key milestones
4. Todo markers MUST use the format `[ ]` for incomplete and `[X]` for complete items
5. The scratchpad MUST be referenced before starting any new subtask
6. All AI task files MUST be stored in the `tasks/ai/` directory

## CRITICAL: Human Task Organization Rules

**BEFORE creating any new human task, you MUST:**

1. **Check for existing tasks** - Search for similar tasks to avoid duplicates
2. **Verify directory structure** - Ensure task goes in correct category (validation/clarity/visual)
3. **Use sequential numbering** - Tasks must be numbered `01-`, `02-`, `03-` etc. in each category
4. **Update README.md** - Always update `tasks/human/README.md` when adding/removing tasks
5. **No orphaned tasks** - NEVER create tasks at the root level of `/tasks/human/`
6. **Merge similar tasks** - If creating a task similar to existing one, merge them instead

**MANDATORY CHECKS BEFORE CREATING TASKS:**
- [ ] Check `tasks/human/validation/` for existing similar tasks
- [ ] Check `tasks/human/clarity/` for existing similar tasks  
- [ ] Check `tasks/human/visual/` for existing similar tasks
- [ ] Check root level for orphaned tasks that need to be moved
- [ ] Verify next available number in target category
- [ ] Plan README.md update

**TASK CREATION WORKFLOW:**
1. Review existing tasks in all categories
2. Identify correct category for new task
3. Determine next sequential number
4. Create task in correct directory
5. Update `tasks/human/README.md` immediately
6. Verify no orphaned tasks remain

## CRITICAL: Documentation File Organization Rules

**NEVER create ALLCAPS.md files at the root level. All documentation must be properly organized:**

1. **Documentation Files** - Must go in `docs/` directory:
   - `docs/testing-guide.md` (not `TESTING_GUIDE.md`)
   - `docs/troubleshooting.md` (not `TROUBLESHOOTING.md`)
   - `docs/issue-report-template.md` (not `ISSUE_REPORT_TEMPLATE.md`)
   - `docs/first-pass-summary.md` (not `FIRST_PASS_SUMMARY.md`)

2. **Specification Files** - Must go in `specs/` directory:
   - `specs/technical-architecture.md`
   - `specs/testing-validation.md`
   - `specs/content-consumption-patterns.md`

3. **Task Files** - Must go in `tasks/` directory:
   - `tasks/ai/scratchpad.md`
   - `tasks/human/validation/01-task-name.md`

4. **Root Level Files** - Only these are allowed at root:
   - `README.md`
   - `SPECS.md`
   - `manifest.json`
   - `build.sh`
   - `.cursorrules`
   - Configuration files (`.gitignore`, `package.json`, etc.)

**MANDATORY CHECKS BEFORE CREATING DOCUMENTATION:**
- [ ] Check if file should go in `docs/`, `specs/`, or `tasks/`
- [ ] Use lowercase filenames with hyphens (kebab-case)
- [ ] Never use ALLCAPS.md at root level
- [ ] Update relevant README files if adding new documentation

## AI Scratchpad Format

```markdown
# Current Task: [Task Name]

## Description
[Detailed task description and requirements]

## Plan
[ ] Step 1: Initial setup
[ ] Step 2: Core implementation
[ ] Step 3: Testing

## Progress
[X] Step 1 completed: Initial setup done
[ ] Step 2 in progress: Core implementation

## Reflections
### Milestone 1
- Accomplished: [List of achievements]
- Challenges: [List of issues encountered]
- Improvements: [List of potential improvements]
- Next Steps: [List of next actions]
```

## Human Task Structure

The `/tasks/human/` directory MUST be organized into three priority-based categories:

### 1. Validation Tasks (`validation/`)
- **Purpose**: Verify core demo assumptions and technical requirements
- **Priority**: HIGH - These tasks block further development
- **Requirements**: Real equipment, measurements, and data collection
- **Naming**: `01-task-name.md`, `02-task-name.md`, etc.
- **Status Tracking**: Must include Not Started/In Progress/Complete/Blocked

### 2. Clarity Tasks (`clarity/`)
- **Purpose**: Support talking points with quantitative data and analysis
- **Priority**: MEDIUM - Enhance demo effectiveness and communication
- **Requirements**: Data analysis, frequency response measurements, noise quantification
- **Naming**: `01-task-name.md`, `02-task-name.md`, etc.

### 3. Visual Tasks (`visual/`)
- **Purpose**: Create diagrams, photos, and visual aids for communication
- **Priority**: MEDIUM - Improve presentation and documentation
- **Requirements**: Schematics, setup photography, frequency plots, visual documentation
- **Naming**: `01-task-name.md`, `02-task-name.md`, etc.

## Human Task File Format

All human task files MUST follow the template structure:

```markdown
# Task: [Task Name]
Priority: [High/Medium/Low]
Estimated Time: [X hours]
Dependencies: [List of requirements]
Status: [Not Started/In Progress/Complete/Blocked]

## Objective
[Clear description of the task goal and why it's important]

## Steps
1. [ ] Step one
2. [ ] Step two
3. [ ] Step three

## Data Collection
- Location: [Where to store data]
- Format: [Expected data format]
- Validation: [How to verify success]

## Success Criteria
- [ ] Criterion 1
- [ ] Criterion 2
- [ ] Criterion 3

## Notes
[Any additional information, warnings, or special considerations]

## Progress Updates
### [Date] - [Duration]
- [ ] Step completed
- [ ] Data collected
- [ ] Issues encountered
- [ ] Next steps
```

## Directory Structure Requirements

```
tasks/
‚îú‚îÄ‚îÄ ai/
‚îÇ   ‚îî‚îÄ‚îÄ scratchpad.md          # AI task planning and progress
‚îú‚îÄ‚îÄ human/
‚îÇ   ‚îú‚îÄ‚îÄ README.md              # Human task overview and priorities
‚îÇ   ‚îú‚îÄ‚îÄ validation/            # High priority - core assumptions
‚îÇ   ‚îú‚îÄ‚îÄ clarity/               # Medium priority - quantitative support
‚îÇ   ‚îî‚îÄ‚îÄ visual/                # Medium priority - visual aids
‚îú‚îÄ‚îÄ templates/
‚îÇ   ‚îú‚îÄ‚îÄ task-template.md       # Standard task format
‚îÇ   ‚îî‚îÄ‚îÄ data-collection-template.md
‚îî‚îÄ‚îÄ timeline-management.md     # Project timeline and deadlines

docs/
‚îú‚îÄ‚îÄ testing-guide.md           # Testing procedures and solutions
‚îú‚îÄ‚îÄ troubleshooting.md         # Debugging and problem resolution
‚îú‚îÄ‚îÄ issue-report-template.md   # Standardized issue reporting
‚îî‚îÄ‚îÄ first-pass-summary.md      # Project milestone summaries

specs/
‚îú‚îÄ‚îÄ technical-architecture.md  # Technical specifications
‚îú‚îÄ‚îÄ testing-validation.md      # Testing framework specs
‚îî‚îÄ‚îÄ content-consumption-patterns.md # UX patterns
```

## Human Task README Requirements

The `tasks/human/README.md` MUST include:

1. **Current Priorities Section** with:
   - High priority tasks listed first
   - Status, time estimates, and dependencies
   - Clear priority indicators (üî¥ HIGH, üü° MEDIUM, üü¢ LOW)

2. **Task Categories Section** explaining:
   - Purpose of each category (validation/clarity/visual)
   - Priority levels and dependencies
   - Typical requirements and outputs

3. **Getting Started Section** with:
   - How to check priorities
   - How to use templates
   - Where to store data
   - How to update status

4. **Status Legend** defining:
   - Not Started, In Progress, Complete, Blocked
   - Clear criteria for each status

## Examples

‚úÖ Correct AI Scratchpad:
```markdown
# Current Task: Ground Loop Demo Documentation

## Description
Create comprehensive documentation and data collection framework for the Ground Loop Demo.

## Plan
[ ] Create initial specs structure
[ ] Define style guide
[ ] Set up task tracking system

## Progress
[X] Create initial specs structure
[X] Define style guide

## Reflections
### Milestone: Initial Setup
- Accomplished: Basic documentation structure created
- Challenges: Initially placed task tracking in wrong location
- Improvements: Need proper task tracking system
- Next Steps: Create tasks/ directory structure
```

‚úÖ Correct Human Task:
```markdown
# Task: Demo Board Baseline Validation
Priority: High
Estimated Time: 2-3 hours
Dependencies: Demo board, oscilloscope, cables, signal generator
Status: Not Started

## Objective
Validate that the demo board produces expected noise levels to establish baseline measurements.

## Steps
1. [ ] Set up demo board with oscilloscope
2. [ ] Measure baseline noise without TICP
3. [ ] Document noise characteristics

## Data Collection
- Location: data/validation/
- Format: Screenshots, measurements, notes
- Validation: Noise levels match expected specifications

## Success Criteria
- [ ] Baseline noise measured and documented
- [ ] Measurements repeatable and consistent
- [ ] Data stored in proper format

## Notes
Critical for establishing demo effectiveness baseline.

## Progress Updates
### [Date] - [Duration]
- [ ] Step completed
- [ ] Data collected
- [ ] Issues encountered
- [ ] Next steps
```

‚ùå **INCORRECT - Orphaned Task:**
```markdown
# Task: Extension Manual Verification
Priority: High
Estimated Time: 1-2 hours
Dependencies: Built extension, Firefox browser
Status: Not Started
```
**Problem**: Task created at root level instead of in `validation/` directory

‚ùå **INCORRECT - ALLCAPS Documentation:**
Creating `TESTING_GUIDE.md` at root level
**Problem**: Should be `docs/testing-guide.md` with lowercase filename

‚ùå **INCORRECT - Duplicate Task:**
Creating `03-extension-debugging.md` when `03-extension-manual-verification.md` already exists
**Problem**: Should merge similar tasks instead of creating duplicates

## File Organization

- AI task files: `tasks/ai/`
- Human task files: `tasks/human/` (in appropriate subdirectories)
- Documentation files: `docs/` (lowercase filenames)
- Specification files: `specs/`
- Templates: `tasks/templates/`
- Scratchpad: `tasks/ai/scratchpad.md`
